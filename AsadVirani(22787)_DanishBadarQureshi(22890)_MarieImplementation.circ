<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.7.1" version="1.0">
This file is intended to be loaded by Logisim (http://www.cburch.com/logisim/).
<lib desc="#Wiring" name="0"/>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="ROM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#Base" name="6">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <main name="ALU"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="6" map="Button2" name="Menu Tool"/>
    <tool lib="6" map="Button3" name="Menu Tool"/>
    <tool lib="6" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="6" name="Poke Tool"/>
    <tool lib="6" name="Edit Tool"/>
    <tool lib="6" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="tristate" val="false"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="ALU">
    <a name="circuit" val="ALU"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <wire from="(530,120)" to="(530,160)"/>
    <wire from="(540,130)" to="(590,130)"/>
    <wire from="(230,340)" to="(610,340)"/>
    <wire from="(530,120)" to="(590,120)"/>
    <wire from="(630,190)" to="(690,190)"/>
    <wire from="(610,270)" to="(610,340)"/>
    <wire from="(230,150)" to="(340,150)"/>
    <wire from="(540,130)" to="(540,190)"/>
    <wire from="(340,150)" to="(340,230)"/>
    <wire from="(370,170)" to="(370,250)"/>
    <wire from="(450,240)" to="(530,240)"/>
    <wire from="(450,160)" to="(530,160)"/>
    <wire from="(230,250)" to="(370,250)"/>
    <wire from="(530,190)" to="(530,240)"/>
    <wire from="(370,170)" to="(410,170)"/>
    <wire from="(370,250)" to="(410,250)"/>
    <wire from="(530,190)" to="(540,190)"/>
    <wire from="(340,230)" to="(410,230)"/>
    <wire from="(340,150)" to="(410,150)"/>
    <comp lib="0" loc="(230,250)" name="Pin">
      <a name="width" val="12"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="0" loc="(230,150)" name="Pin">
      <a name="width" val="12"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="2" loc="(630,190)" name="Multiplexer">
      <a name="select" val="4"/>
      <a name="width" val="12"/>
      <a name="enable" val="false"/>
    </comp>
    <comp lib="3" loc="(450,160)" name="Adder">
      <a name="width" val="12"/>
    </comp>
    <comp lib="0" loc="(230,340)" name="Pin">
      <a name="width" val="4"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="0" loc="(690,190)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="12"/>
      <a name="labelloc" val="east"/>
    </comp>
    <comp lib="3" loc="(450,240)" name="Multiplier">
      <a name="width" val="12"/>
    </comp>
  </circuit>
  <circuit name="main">
    <a name="circuit" val="main"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <wire from="(490,520)" to="(740,520)"/>
    <wire from="(540,410)" to="(910,410)"/>
    <wire from="(640,460)" to="(690,460)"/>
    <wire from="(260,140)" to="(260,280)"/>
    <wire from="(270,120)" to="(450,120)"/>
    <wire from="(230,280)" to="(230,610)"/>
    <wire from="(880,310)" to="(940,310)"/>
    <wire from="(660,390)" to="(980,390)"/>
    <wire from="(760,230)" to="(760,550)"/>
    <wire from="(250,590)" to="(370,590)"/>
    <wire from="(390,330)" to="(390,480)"/>
    <wire from="(520,270)" to="(560,270)"/>
    <wire from="(650,480)" to="(690,480)"/>
    <wire from="(410,40)" to="(410,380)"/>
    <wire from="(410,530)" to="(410,550)"/>
    <wire from="(930,40)" to="(930,130)"/>
    <wire from="(730,330)" to="(830,330)"/>
    <wire from="(660,390)" to="(660,470)"/>
    <wire from="(190,280)" to="(230,280)"/>
    <wire from="(120,300)" to="(120,330)"/>
    <wire from="(490,420)" to="(490,520)"/>
    <wire from="(910,300)" to="(910,410)"/>
    <wire from="(590,120)" to="(610,120)"/>
    <wire from="(630,220)" to="(650,220)"/>
    <wire from="(720,470)" to="(740,470)"/>
    <wire from="(490,420)" to="(510,420)"/>
    <wire from="(490,400)" to="(510,400)"/>
    <wire from="(960,320)" to="(960,610)"/>
    <wire from="(740,310)" to="(830,310)"/>
    <wire from="(520,270)" to="(520,390)"/>
    <wire from="(110,180)" to="(250,180)"/>
    <wire from="(610,250)" to="(740,250)"/>
    <wire from="(750,230)" to="(750,290)"/>
    <wire from="(370,590)" to="(950,590)"/>
    <wire from="(750,290)" to="(830,290)"/>
    <wire from="(730,130)" to="(740,130)"/>
    <wire from="(410,40)" to="(930,40)"/>
    <wire from="(950,320)" to="(950,590)"/>
    <wire from="(880,130)" to="(930,130)"/>
    <wire from="(650,220)" to="(650,480)"/>
    <wire from="(490,380)" to="(490,400)"/>
    <wire from="(980,300)" to="(980,390)"/>
    <wire from="(730,100)" to="(730,130)"/>
    <wire from="(630,100)" to="(730,100)"/>
    <wire from="(640,380)" to="(640,460)"/>
    <wire from="(250,180)" to="(250,590)"/>
    <wire from="(740,230)" to="(740,250)"/>
    <wire from="(230,280)" to="(260,280)"/>
    <wire from="(230,610)" to="(960,610)"/>
    <wire from="(110,260)" to="(140,260)"/>
    <wire from="(410,550)" to="(760,550)"/>
    <wire from="(630,110)" to="(630,220)"/>
    <wire from="(700,210)" to="(730,210)"/>
    <wire from="(660,470)" to="(690,470)"/>
    <wire from="(250,140)" to="(250,180)"/>
    <wire from="(650,220)" to="(680,220)"/>
    <wire from="(490,380)" to="(640,380)"/>
    <wire from="(120,300)" to="(140,300)"/>
    <wire from="(730,230)" to="(730,330)"/>
    <wire from="(910,300)" to="(940,300)"/>
    <wire from="(120,330)" to="(390,330)"/>
    <wire from="(410,380)" to="(490,380)"/>
    <wire from="(740,250)" to="(740,310)"/>
    <wire from="(370,540)" to="(370,590)"/>
    <wire from="(970,300)" to="(980,300)"/>
    <wire from="(740,470)" to="(740,520)"/>
    <wire from="(610,290)" to="(750,290)"/>
    <comp lib="1" loc="(880,310)" name="OR Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="2" loc="(540,410)" name="Multiplexer">
      <a name="selloc" val="tr"/>
      <a name="width" val="12"/>
      <a name="enable" val="false"/>
    </comp>
    <comp lib="6" loc="(37,122)" name="Text">
      <a name="text" val="3. add 1"/>
    </comp>
    <comp lib="0" loc="(680,220)" name="Splitter">
      <a name="incoming" val="4"/>
      <a name="appear" val="center"/>
      <a name="bit1" val="0"/>
      <a name="bit2" val="1"/>
      <a name="bit3" val="1"/>
    </comp>
    <comp lib="6" loc="(654,93)" name="Text">
      <a name="text" val="spit opcode and operand"/>
      <a name="font" val="SansSerif plain 10"/>
    </comp>
    <comp lib="6" loc="(947,273)" name="Text">
      <a name="text" val="AC"/>
    </comp>
    <comp lib="5" loc="(110,260)" name="Button"/>
    <comp lib="6" loc="(234,23)" name="Text">
      <a name="text" val="In instruction memory write 0000, 0001, 1002, 1003, 2004, 3000"/>
    </comp>
    <comp lib="6" loc="(778,344)" name="Text">
      <a name="text" val="ORing between 3 instruction beside halt enable the AC"/>
      <a name="font" val="SansSerif plain 10"/>
    </comp>
    <comp lib="6" loc="(428,566)" name="Text">
      <a name="text" val="AND gate used so that AC resets after displaying previous result"/>
      <a name="font" val="SansSerif plain 9"/>
    </comp>
    <comp lib="6" loc="(46,145)" name="Text">
      <a name="text" val="4. multiply 2"/>
    </comp>
    <comp lib="6" loc="(502,70)" name="Text">
      <a name="text" val="Instruction Memory"/>
    </comp>
    <comp lib="2" loc="(730,210)" name="Decoder">
      <a name="facing" val="south"/>
      <a name="select" val="2"/>
      <a name="enable" val="false"/>
    </comp>
    <comp lib="4" loc="(970,300)" name="Register">
      <a name="width" val="12"/>
    </comp>
    <comp lib="6" loc="(249,94)" name="Text">
      <a name="text" val="PC"/>
    </comp>
    <comp lib="6" loc="(594,370)" name="Text">
      <a name="text" val="MUX makes sure to use ALU output and direct LOADing into AC"/>
    </comp>
    <comp lib="1" loc="(560,270)" name="OR Gate">
      <a name="facing" val="west"/>
      <a name="inputs" val="2"/>
    </comp>
    <comp lib="1" loc="(390,480)" name="AND Gate">
      <a name="facing" val="north"/>
      <a name="inputs" val="2"/>
      <a name="negate0" val="true"/>
    </comp>
    <comp lib="4" loc="(270,120)" name="Counter"/>
    <comp lib="6" loc="(626,198)" name="Text">
      <a name="text" val="using only 2 LSB as only 4 instructions"/>
      <a name="font" val="SansSerif plain 10"/>
    </comp>
    <comp lib="6" loc="(697,445)" name="Text">
      <a name="text" val="ALU"/>
    </comp>
    <comp lib="6" loc="(120,240)" name="Text">
      <a name="text" val="Manual reset button"/>
    </comp>
    <comp lib="1" loc="(190,280)" name="OR Gate">
      <a name="inputs" val="2"/>
    </comp>
    <comp lib="6" loc="(473,240)" name="Text">
      <a name="text" val="only when ADD or MUL opcode is used, then AC updates the result from ALU"/>
      <a name="font" val="SansSerif plain 9"/>
    </comp>
    <comp lib="0" loc="(110,180)" name="Clock"/>
    <comp lib="0" loc="(610,120)" name="Splitter">
      <a name="incoming" val="16"/>
      <a name="bit1" val="0"/>
      <a name="bit2" val="0"/>
      <a name="bit3" val="0"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="1"/>
      <a name="bit13" val="1"/>
      <a name="bit14" val="1"/>
      <a name="bit15" val="1"/>
    </comp>
    <comp lib="6" loc="(36,101)" name="Text">
      <a name="text" val="2. add 3"/>
    </comp>
    <comp lib="6" loc="(47,62)" name="Text">
      <a name="text" val="Instructions"/>
    </comp>
    <comp lib="6" loc="(240,320)" name="Text">
      <a name="text" val="reset with button OR END instruction"/>
    </comp>
    <comp lib="6" loc="(185,42)" name="Text">
      <a name="text" val="In data memory write 000, 002, 003, 001, 002"/>
    </comp>
    <comp lib="6" loc="(778,79)" name="Text">
      <a name="text" val="Data Memory"/>
    </comp>
    <comp lib="6" loc="(38,81)" name="Text">
      <a name="text" val="1. mov 2"/>
    </comp>
    <comp lib="6" loc="(32,171)" name="Text">
      <a name="text" val="5. end"/>
    </comp>
    <comp loc="(720,470)" name="ALU"/>
    <comp lib="4" loc="(590,120)" name="RAM">
      <a name="dataWidth" val="16"/>
    </comp>
    <comp lib="4" loc="(880,130)" name="RAM">
      <a name="addrWidth" val="12"/>
      <a name="dataWidth" val="12"/>
    </comp>
  </circuit>
</project>
